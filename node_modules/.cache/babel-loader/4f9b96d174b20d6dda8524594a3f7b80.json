{"ast":null,"code":"import _defineProperty from \"/home/lucasvegini/Desktop/Trinken/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/home/lucasvegini/Desktop/Trinken/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lucasvegini/Desktop/Trinken/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/lucasvegini/Desktop/Trinken/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/lucasvegini/Desktop/Trinken/frontend/src/pages/Start/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport * as starWarsAPI from \"../../util/API/starWarsAPI\";\nimport { Button, TextField } from \"@material-ui/core\";\nexport default function Start(props) {\n  var _React$createElement;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      textSearch = _useState2[0],\n      setTextSearch = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      allMoviesObjetic = _useState4[0],\n      setAllMoviesObject = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      allMovies = _useState6[0],\n      setAllMovies = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      allPeople = _useState8[0],\n      setAllPeople = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      filtredMovies = _useState10[0],\n      setFiltredMovies = _useState10[1];\n\n  useEffect(function () {\n    function getData() {\n      return _getData.apply(this, arguments);\n    }\n\n    function _getData() {\n      _getData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getAllFilmds();\n\n              case 2:\n                _context.next = 4;\n                return getAllPeople();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getData.apply(this, arguments);\n    }\n\n    getData();\n  }, []);\n  console.log(\"Movie: \", allMovies);\n\n  function getAllFilmds() {\n    return _getAllFilmds.apply(this, arguments);\n  }\n\n  function _getAllFilmds() {\n    _getAllFilmds = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var response, movies;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return starWarsAPI.getAllFilms();\n\n            case 2:\n              response = _context2.sent;\n              movies = {};\n              response.data.results.map(function (movie) {\n                return movies[movie.url] = movie;\n              });\n              setAllMovies(movies);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _getAllFilmds.apply(this, arguments);\n  }\n\n  function getAllPeople() {\n    return _getAllPeople.apply(this, arguments);\n  }\n\n  function _getAllPeople() {\n    _getAllPeople = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return starWarsAPI.getAllPeople();\n\n            case 2:\n              response = _context3.sent;\n              setAllPeople(response.data.results);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _getAllPeople.apply(this, arguments);\n  }\n\n  function filter(_x) {\n    return _filter.apply(this, arguments);\n  }\n\n  function _filter() {\n    _filter = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(value) {\n      var nameFilter;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              // console.log(\"allMovies: \", allMovies);\n              console.log(\"allPeople: \", allPeople);\n              setTextSearch(value);\n\n              if (\"pessoa\" === \"as\") {\n                setFiltredMovies(allMovies.filter(function (movie) {\n                  return movie.title.split(' ').join('').toLowerCase().includes(textSearch.split(' ').join('').toLowerCase());\n                }));\n              } else {\n                nameFilter = allPeople.filter(function (character) {\n                  return character.name.split(' ').join('').toLowerCase().includes(textSearch.split(' ').join('').toLowerCase());\n                });\n\n                if (nameFilter.length === 1) {\n                  nameFilter[0].films.map();\n                }\n              }\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    return _filter.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextField, (_React$createElement = {\n    style: {\n      marginBottom: 16\n    },\n    variant: \"filled\",\n    id: \"outlined-required\",\n    label: \"Pesquisa\"\n  }, _defineProperty(_React$createElement, \"variant\", \"outlined\"), _defineProperty(_React$createElement, \"margin\", \"dense\"), _defineProperty(_React$createElement, \"fullWidth\", true), _defineProperty(_React$createElement, \"value\", textSearch), _defineProperty(_React$createElement, \"onChange\", function onChange(event) {\n    return filter(event.target.value);\n  }), _defineProperty(_React$createElement, \"__self\", this), _defineProperty(_React$createElement, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 7\n  }), _React$createElement)));\n}","map":{"version":3,"sources":["/home/lucasvegini/Desktop/Trinken/frontend/src/pages/Start/index.js"],"names":["React","useState","useEffect","starWarsAPI","Button","TextField","Start","props","textSearch","setTextSearch","allMoviesObjetic","setAllMoviesObject","allMovies","setAllMovies","allPeople","setAllPeople","filtredMovies","setFiltredMovies","getData","getAllFilmds","getAllPeople","console","log","getAllFilms","response","movies","data","results","map","movie","url","filter","value","title","split","join","toLowerCase","includes","nameFilter","character","name","length","films","marginBottom","event","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport * as starWarsAPI from \"../../util/API/starWarsAPI\";\nimport { Button, TextField } from \"@material-ui/core\";\n\nexport default function Start(props) {\n  const [textSearch, setTextSearch] = useState(\"\");\n  const [allMoviesObjetic, setAllMoviesObject] = useState({});\n  const [allMovies, setAllMovies] = useState({});\n  const [allPeople, setAllPeople] = useState([]);\n  const [filtredMovies, setFiltredMovies] = useState([]);\n\n  useEffect(() => {\n    async function getData() {\n      await getAllFilmds();\n      await getAllPeople();\n    }\n    getData();\n  }, [])\n\n  console.log(\"Movie: \", allMovies);\n\n  async function getAllFilmds() {\n    const response = await starWarsAPI.getAllFilms()\n    let movies = {}\n    response.data.results.map(movie => (\n      movies[movie.url] = movie\n    ))\n    setAllMovies(movies)\n  }\n\n  async function getAllPeople() {\n    const response = await starWarsAPI.getAllPeople()\n    setAllPeople(response.data.results)\n  }\n\n  async function filter(value) {\n\n    // console.log(\"allMovies: \", allMovies);\n    console.log(\"allPeople: \", allPeople);\n\n    setTextSearch(value);\n\n    if (\"pessoa\" === \"as\") {\n\n      setFiltredMovies(allMovies.filter((movie) =>\n        movie.title.split(' ').join('').toLowerCase().includes(textSearch.split(' ').join('').toLowerCase())\n      ))\n    }\n    else {\n      let nameFilter = allPeople.filter((character) =>\n        character.name.split(' ').join('').toLowerCase().includes(textSearch.split(' ').join('').toLowerCase())\n      )\n\n      if (nameFilter.length === 1) {\n\n        nameFilter[0].films.map()\n\n\n\n\n\n      }\n\n\n\n\n    }\n  }\n\n  return (\n    <div>\n      <TextField\n        style={{ marginBottom: 16 }}\n        variant=\"filled\"\n        id=\"outlined-required\"\n        label=\"Pesquisa\"\n        variant=\"outlined\"\n        margin=\"dense\"\n        fullWidth\n        value={textSearch}\n        onChange={(event) => filter(event.target.value)}\n      /></div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}