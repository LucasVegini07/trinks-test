{"ast":null,"code":"import _slicedToArray from \"/home/lucasvegini/Desktop/Integral/trinks test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/lucasvegini/Desktop/Integral/trinks test/src/components/Cards/Film/index.js\";\nimport React, { useState } from 'react';\nimport { Grid, ButtonBase, Typography } from \"@material-ui/core\";\nimport MovieInformation from \"../../Dialogs/MovieInformation\";\nimport movie1 from \"../../../Assets/1.jpg\";\nimport movie2 from \"../../../Assets/2.jpg\";\nimport movie3 from \"../../../Assets/3.jpg\";\nimport movie4 from \"../../../Assets/4.jpg\";\nimport movie5 from \"../../../Assets/5.jpg\";\nimport movie6 from \"../../../Assets/6.jpg\";\nexport default function FilmCard(props) {\n  function getImage() {\n    switch (props.movie.title) {\n      case \"The Empire Strikes Back\":\n        return movie2;\n\n      case \"Return of the Jedi\":\n        return movie3;\n\n      case \"The Phantom Menace\":\n        return movie4;\n\n      case \"Attack of the Clones\":\n        return movie5;\n\n      case \"Revenge of the Sith\":\n        return movie6;\n\n      default:\n        return movie1;\n    }\n  }\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      openMovieInformation = _useState2[0],\n      setOpenMovieInformation = _useState2[1];\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ButtonBase, {\n    onClick: function onClick() {\n      return setOpenMovieInformation(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: getImage(),\n    width: \"70%\",\n    alt: \"capa-filme\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, props.movie.title), /*#__PURE__*/React.createElement(MovieInformation, {\n    open: openMovieInformation,\n    onClose: function onClose() {\n      return setOpenMovieInformation(false);\n    },\n    movie: props.movie,\n    allPeopleObjetic: props.allPeopleObjetic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/lucasvegini/Desktop/Integral/trinks test/src/components/Cards/Film/index.js"],"names":["React","useState","Grid","ButtonBase","Typography","MovieInformation","movie1","movie2","movie3","movie4","movie5","movie6","FilmCard","props","getImage","movie","title","openMovieInformation","setOpenMovieInformation","color","allPeopleObjetic"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,UAA3B,QAA6C,mBAA7C;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAEtC,WAASC,QAAT,GAAoB;AAElB,YAAQD,KAAK,CAACE,KAAN,CAAYC,KAApB;AACE,WAAK,yBAAL;AACE,eAAOT,MAAP;;AACF,WAAK,oBAAL;AACE,eAAOC,MAAP;;AACF,WAAK,oBAAL;AACE,eAAOC,MAAP;;AACF,WAAK,sBAAL;AACE,eAAOC,MAAP;;AACF,WAAK,qBAAL;AACE,eAAOC,MAAP;;AACF;AACE,eAAOL,MAAP;AAZJ;AAcD;;AAlBqC,kBAqBkBL,QAAQ,CAAC,KAAD,CArB1B;AAAA;AAAA,MAqB/BgB,oBArB+B;AAAA,MAqBTC,uBArBS;;AAuBtC,sBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,QAA1B;AAAmC,IAAA,OAAO,EAAC,QAA3C;AAAoD,IAAA,UAAU,EAAC,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAE;AAAA,aAAMA,uBAAuB,CAAC,IAAD,CAA7B;AAAA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEJ,QAAQ,EAAlB;AAAsB,IAAA,KAAK,EAAC,KAA5B;AAAkC,IAAA,GAAG,EAAC,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAKE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAAEK,MAAAA,KAAK,EAAE;AAAT,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,CAACE,KAAN,CAAYC,KADf,CALF,eAQE,oBAAC,gBAAD;AACE,IAAA,IAAI,EAAEC,oBADR;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMC,uBAAuB,CAAC,KAAD,CAA7B;AAAA,KAFX;AAGE,IAAA,KAAK,EAAEL,KAAK,CAACE,KAHf;AAIE,IAAA,gBAAgB,EAAEF,KAAK,CAACO,gBAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAiBD","sourcesContent":["\nimport React, { useState } from 'react';\nimport { Grid, ButtonBase, Typography } from \"@material-ui/core\";\nimport MovieInformation from \"../../Dialogs/MovieInformation\"\nimport movie1 from \"../../../Assets/1.jpg\"\nimport movie2 from \"../../../Assets/2.jpg\"\nimport movie3 from \"../../../Assets/3.jpg\"\nimport movie4 from \"../../../Assets/4.jpg\"\nimport movie5 from \"../../../Assets/5.jpg\"\nimport movie6 from \"../../../Assets/6.jpg\"\n\nexport default function FilmCard(props) {\n\n  function getImage() {\n\n    switch (props.movie.title) {\n      case \"The Empire Strikes Back\":\n        return movie2;\n      case \"Return of the Jedi\":\n        return movie3;\n      case \"The Phantom Menace\":\n        return movie4;\n      case \"Attack of the Clones\":\n        return movie5;\n      case \"Revenge of the Sith\":\n        return movie6\n      default:\n        return movie1\n    }\n  }\n\n\n  const [openMovieInformation, setOpenMovieInformation] = useState(false);\n\n  return (\n    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n      <ButtonBase onClick={() => setOpenMovieInformation(true)}>\n        <img src={getImage()} width=\"70%\" alt=\"capa-filme\" >\n        </img>\n      </ButtonBase>\n      <Typography align=\"center\" style={{ color: \"white\" }}>\n        {props.movie.title}\n      </Typography>\n      <MovieInformation\n        open={openMovieInformation}\n        onClose={() => setOpenMovieInformation(false)}\n        movie={props.movie}\n        allPeopleObjetic={props.allPeopleObjetic}\n      ></MovieInformation>\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}