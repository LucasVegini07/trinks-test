{"ast":null,"code":"import _slicedToArray from \"/home/lucasvegini/Desktop/Trinken/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/lucasvegini/Desktop/Trinken/frontend/src/components/Cards/Film/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport MovieInformation from \"../../Dialogs/MovieInformation\";\nimport background from \"../../../Assets/background.png\";\nimport { Card, CardContent, Grid, Typography, IconButton, Tooltip, Chip, ButtonBase } from \"@material-ui/core\";\nexport default function Start(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      openMovieInformation = _useState2[0],\n      setOpenMovieInformation = _useState2[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ButtonBase, {\n    onClick: function onClick() {\n      return setOpenMovieInformation(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontWeight: 550\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \" \", props.movie.title, \" \")))), /*#__PURE__*/React.createElement(MovieInformation, {\n    open: openMovieInformation,\n    onClose: function onClose() {\n      return setOpenMovieInformation(false);\n    },\n    movie: props.movie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/lucasvegini/Desktop/Trinken/frontend/src/components/Cards/Film/index.js"],"names":["React","useState","useEffect","MovieInformation","background","Card","CardContent","Grid","Typography","IconButton","Tooltip","Chip","ButtonBase","Start","props","openMovieInformation","setOpenMovieInformation","fontWeight","movie","title"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AAGA,SACEC,IADF,EAEEC,WAFF,EAGEC,IAHF,EAIEC,UAJF,EAKEC,UALF,EAMEC,OANF,EAOEC,IAPF,EAQEC,UARF,QASO,mBATP;AAWA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA,kBAEqBb,QAAQ,CAAC,KAAD,CAF7B;AAAA;AAAA,MAE5Bc,oBAF4B;AAAA,MAENC,uBAFM;;AAInC,sBACE,uDACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAE;AAAA,aAAMA,uBAAuB,CAAC,IAAD,CAA7B;AAAA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAoCH,KAAK,CAACI,KAAN,CAAYC,KAAhD,MADF,CADF,CADF,CADF,eASE,oBAAC,gBAAD;AACE,IAAA,IAAI,EAAEJ,oBADR;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMC,uBAAuB,CAAC,KAAD,CAA7B;AAAA,KAFX;AAGE,IAAA,KAAK,EAAEF,KAAK,CAACI,KAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAiBD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MovieInformation from \"../../Dialogs/MovieInformation\"\nimport background from \"../../../Assets/background.png\"\n\n\nimport {\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  IconButton,\n  Tooltip,\n  Chip,\n  ButtonBase\n} from \"@material-ui/core\";\n\nexport default function Start(props) {\n\n  const [openMovieInformation, setOpenMovieInformation] = useState(false);\n\n  return (\n    <>\n      <ButtonBase onClick={() => setOpenMovieInformation(true)} >\n        <Card>\n          <CardContent>\n            <span style={{ fontWeight: 550 }}> {props.movie.title} </span>\n          </CardContent>\n        </Card>\n      </ButtonBase>\n\n      <MovieInformation\n        open={openMovieInformation}\n        onClose={() => setOpenMovieInformation(false)}\n        movie={props.movie}\n      ></MovieInformation>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}