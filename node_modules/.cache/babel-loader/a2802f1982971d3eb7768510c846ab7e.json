{"ast":null,"code":"import _defineProperty from \"/home/lucasvegini/Desktop/Trinken/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/home/lucasvegini/Desktop/Trinken/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lucasvegini/Desktop/Trinken/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/lucasvegini/Desktop/Trinken/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/lucasvegini/Desktop/Trinken/frontend/src/pages/Start/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport * as starWarsAPI from \"../../util/API/starWarsAPI\";\nimport { Grid, TextField, MenuItem } from \"@material-ui/core\";\nimport Logo from \"../../Assets/logo.png\";\nimport FilmCard from \"../../components/Cards/Film\";\nexport default function Start(props) {\n  var _React$createElement,\n      _this = this;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      textSearch = _useState2[0],\n      setTextSearch = _useState2[1];\n\n  var _useState3 = useState(\"Movie\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      search = _useState4[0],\n      setSearch = _useState4[1];\n\n  var _useState5 = useState([\"Movie\", \"People\"]),\n      _useState6 = _slicedToArray(_useState5, 1),\n      option = _useState6[0];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      allMoviesObjetic = _useState8[0],\n      setAllMoviesObject = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      allPeopleObjetic = _useState10[0],\n      setAllPeopleObject = _useState10[1];\n\n  var _useState11 = useState({}),\n      _useState12 = _slicedToArray(_useState11, 2),\n      allMovies = _useState12[0],\n      setAllMovies = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      allPeople = _useState14[0],\n      setAllPeople = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      filtredMovies = _useState16[0],\n      setFiltredMovies = _useState16[1];\n\n  useEffect(function () {\n    function getData() {\n      return _getData.apply(this, arguments);\n    }\n\n    function _getData() {\n      _getData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getAllFilmds();\n\n              case 2:\n                _context.next = 4;\n                return getAllPeople();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getData.apply(this, arguments);\n    }\n\n    getData();\n  }, []);\n\n  function getAllFilmds() {\n    return _getAllFilmds.apply(this, arguments);\n  }\n\n  function _getAllFilmds() {\n    _getAllFilmds = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var response, movies;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return starWarsAPI.getAllFilms();\n\n            case 2:\n              response = _context2.sent;\n              setAllMovies(response.data.results);\n              setFiltredMovies(response.data.results);\n              movies = {};\n              response.data.results.map(function (movie) {\n                return movies[movie.url] = movie;\n              });\n              setAllMoviesObject(movies);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _getAllFilmds.apply(this, arguments);\n  }\n\n  function getAllPeople() {\n    return _getAllPeople.apply(this, arguments);\n  }\n\n  function _getAllPeople() {\n    _getAllPeople = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var response, people;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return starWarsAPI.getAllPeople();\n\n            case 2:\n              response = _context3.sent;\n              setAllPeople(response.data.results);\n              people = {};\n              response.data.results.map(function (person) {\n                return people[person.url] = person;\n              });\n              setAllPeopleObject(people);\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _getAllPeople.apply(this, arguments);\n  }\n\n  function onChangeSelect(value) {\n    setFiltredMovies(allMovies);\n    setSearch(value);\n    setTextSearch(\"\");\n  }\n\n  function filter(value) {\n    setTextSearch(value);\n\n    if (!value) {\n      return setFiltredMovies(allMovies);\n    }\n\n    if (search === \"Movie\") {\n      setFiltredMovies(allMovies.filter(function (movie) {\n        return movie.title.split(' ').join('').toLowerCase().includes(value.split(' ').join('').toLowerCase());\n      }));\n    } else {\n      var filtred = [];\n      var nameFilter = allPeople.filter(function (character) {\n        return character.name.split(' ').join('').toLowerCase().includes(value.split(' ').join('').toLowerCase());\n      });\n\n      if (nameFilter.length === 1) {\n        nameFilter[0].films.map(function (filmUrl) {\n          filtred.push(allMoviesObjetic[filmUrl]);\n        });\n        return null;\n        setFiltredMovies(filtred);\n      } else {\n        setFiltredMovies([]);\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: Logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-between\",\n    alignItems: \"center\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, (_React$createElement = {\n    variant: \"filled\",\n    id: \"outlined-required\",\n    label: \"Pesquisa\"\n  }, _defineProperty(_React$createElement, \"variant\", \"outlined\"), _defineProperty(_React$createElement, \"margin\", \"dense\"), _defineProperty(_React$createElement, \"fullWidth\", true), _defineProperty(_React$createElement, \"fullWidth\", true), _defineProperty(_React$createElement, \"value\", textSearch), _defineProperty(_React$createElement, \"onChange\", function onChange(event) {\n    return filter(event.target.value);\n  }), _defineProperty(_React$createElement, \"__self\", this), _defineProperty(_React$createElement, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 15\n  }), _React$createElement))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"outlined-required\",\n    select: true,\n    label: \"Setor\",\n    variant: \"outlined\",\n    margin: \"dense\",\n    fullWidth: true,\n    value: search,\n    onChange: function onChange(event) {\n      return onChangeSelect(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, option.map(function (option) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: option,\n      value: option,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 19\n      }\n    }, option);\n  })))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    style: {\n      marginTop: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"flex-start\",\n    alignItems: \"center\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, filtredMovies.length > 0 && filtredMovies.map(function (movie) {\n    return /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FilmCard, {\n      movie: movie,\n      allPeopleObjetic: allPeopleObjetic,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }));\n  })))));\n}","map":{"version":3,"sources":["/home/lucasvegini/Desktop/Trinken/frontend/src/pages/Start/index.js"],"names":["React","useState","useEffect","starWarsAPI","Grid","TextField","MenuItem","Logo","FilmCard","Start","props","textSearch","setTextSearch","search","setSearch","option","allMoviesObjetic","setAllMoviesObject","allPeopleObjetic","setAllPeopleObject","allMovies","setAllMovies","allPeople","setAllPeople","filtredMovies","setFiltredMovies","getData","getAllFilmds","getAllPeople","getAllFilms","response","data","results","movies","map","movie","url","people","person","onChangeSelect","value","filter","title","split","join","toLowerCase","includes","filtred","nameFilter","character","name","length","films","filmUrl","push","event","target","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport * as starWarsAPI from \"../../util/API/starWarsAPI\";\nimport { Grid, TextField, MenuItem } from \"@material-ui/core\";\nimport Logo from \"../../Assets/logo.png\"\nimport FilmCard from \"../../components/Cards/Film\"\n\nexport default function Start(props) {\n  const [textSearch, setTextSearch] = useState(\"\");\n  const [search, setSearch] = useState(\"Movie\");\n  const [option] = useState([\"Movie\", \"People\"]);\n  const [allMoviesObjetic, setAllMoviesObject] = useState({});\n  const [allPeopleObjetic, setAllPeopleObject] = useState({});\n  const [allMovies, setAllMovies] = useState({});\n  const [allPeople, setAllPeople] = useState([]);\n  const [filtredMovies, setFiltredMovies] = useState([]);\n\n  useEffect(() => {\n    async function getData() {\n      await getAllFilmds();\n      await getAllPeople();\n    }\n    getData();\n  }, [])\n\n  async function getAllFilmds() {\n    const response = await starWarsAPI.getAllFilms()\n    setAllMovies(response.data.results)\n    setFiltredMovies(response.data.results)\n\n    let movies = {}\n    response.data.results.map(movie => (\n      movies[movie.url] = movie\n    ))\n    setAllMoviesObject(movies)\n  }\n\n  async function getAllPeople() {\n    const response = await starWarsAPI.getAllPeople()\n    setAllPeople(response.data.results)\n\n    let people = {}\n    response.data.results.map(person => (\n      people[person.url] = person\n    ))\n    setAllPeopleObject(people)\n  }\n\n  function onChangeSelect(value) {\n    setFiltredMovies(allMovies)\n    setSearch(value)\n    setTextSearch(\"\")\n\n  }\n\n  function filter(value) {\n    setTextSearch(value)\n    if (!value) {\n      return setFiltredMovies(allMovies)\n    }\n\n    if (search === \"Movie\") {\n      setFiltredMovies(allMovies.filter((movie) =>\n        movie.title.split(' ').join('').toLowerCase().includes(value.split(' ').join('').toLowerCase())\n      ))\n    }\n    else {\n      let filtred = [];\n      let nameFilter = allPeople.filter((character) =>\n        character.name.split(' ').join('').toLowerCase().includes(value.split(' ').join('').toLowerCase())\n      )\n      if (nameFilter.length === 1) {\n\n        nameFilter[0].films.map(filmUrl => {\n          filtred.push(allMoviesObjetic[filmUrl]);\n        })\n        return null\n        setFiltredMovies(filtred)\n      } else {\n        setFiltredMovies([])\n      }\n    }\n  }\n\n  return (\n    <>\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <img\n          src={Logo}>\n        </img>\n        <Grid item xs={12}>\n          <Grid container justify=\"space-between\" alignItems=\"center\" spacing={2} >\n            <Grid item xs={8}>\n              <TextField\n                variant=\"filled\"\n                id=\"outlined-required\"\n                label=\"Pesquisa\"\n                variant=\"outlined\"\n                margin=\"dense\"\n                fullWidth\n                fullWidth\n                value={textSearch}\n                onChange={(event) => filter(event.target.value)}\n              />\n            </Grid>\n            <Grid item xs={4}>\n              <TextField\n                required\n                id=\"outlined-required\"\n                select\n                label=\"Setor\"\n                variant=\"outlined\"\n                margin=\"dense\"\n                fullWidth\n                value={search}\n                onChange={(event) =>\n                  onChangeSelect(event.target.value)}\n              >\n                {option.map((option) => (\n                  <MenuItem key={option} value={option}>\n                    {option}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid container justify=\"center\" alignItems=\"center\">\n        <Grid item xs={6} style={{ marginTop: 32 }}>\n          <Grid container justify=\"flex-start\" alignItems=\"center\" spacing={2} >\n            {filtredMovies.length > 0 && filtredMovies.map((movie => (\n              <Grid item xs={4} >\n                <FilmCard movie={movie} allPeopleObjetic={allPeopleObjetic}>\n                </FilmCard>\n              </Grid>\n            )))}\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}